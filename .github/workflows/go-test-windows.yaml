name: go test windows

on: [pull_request, workflow_dispatch]

permissions:
  contents: read

jobs:
  go-test-windows:
    name: "go test with OS: ${{ matrix.os }}; Go: ${{ matrix.go }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: ["1.21"]
        os: [windows-latest]

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: TODO - install senzing-tools
        run: echo "TODO - Run senzing-tools serve-grpc"
      # - name: Install Docker
      #   uses: docker-practice/actions-setup-docker@master
      #   timeout-minutes: 12
      # - name: gRPC service
      #   run: docker run --detach --env SENZING_TOOLS_ENABLE_ALL --publish 8261:8261 senzing/serve-grpc:latest
      # - name: Run go test
      #   run: go test -v -p 1 ./...
      
      - name: run go test
        run: |
          go test -json -v -p 1 -coverprofile=cover -covermode=atomic -coverpkg=./... ./... 2>&1 | tee /tmp/gotest.log | gotestfmt
          cp cover cover.out

      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: cover.out
          path: cover.out

      - name: Upload test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-log
          path: /tmp/gotest.log
          if-no-files-found: error

  coverage:
    name: coverage
    needs: go-test-windows
    uses: senzing-factory/build-resources/.github/workflows/go-coverage.yaml@v2
